SQL> declare
  2  msg varchar2(20) := 'welocme';
  3  begin
  4  dbms_output.put_line(msg);
  5  end;
  6  /
welocme



PL/SQL procedure successfully completed.


declare
 mark pls_integer := 45;
 begin
 if(mark>=45) then
 dbms_output.put_line('A+');
 elsif(mark>=40) then
 dbms_output.put_line('A');
 elsif(mark>=35) then
 dbms_output.put_line('B');
 elsif(mark>30) then
 dbms_output.put_line('C');
 else
 dbms_output.put_line('oops low grade');
 end if;
 end;
 /
A

PL/SQL procedure successfully completed.


declare
type marks is varray(5) of pls_integer;
m1 marks;
m2 marks;
begin
m1 := marks(98,75,56,35,67);
m2 := marks(45,64,76,98,98);
dbms_output.put_line('Total mark of students');
for i in 1 .. 5 loop
dbms_output.put_line(to_char(i) || ' : ' || to_char(m1(i)+m2(i)));
end loop;
end;
/

Total mark of students
1 : 143
2 : 139
3 : 132
4 : 133
5 : 165

PL/SQL procedure successfully completed.

declare
num pls_integer := 5;
temp pls_integer;
fact pls_integer :=1;
begin
temp := num;
while(num>0) loop
fact := fact * num;
num := num -1;
end loop;
dbms_output.put_line('Factorial of '||to_char(temp)||' = '||to_char(fact));
end;
/
Factorial of 5 = 120


declare
i pls_integer := 1;
begin`	
loop
if(i>10) then
exit;
end if;
dbms_output.put_line('3 * '||i||' = '||i*3);
i := i+1;
end loop;
end;
/

3 * 1 = 3
3 * 2 = 6
3 * 3 = 9
3 * 4 = 12
3 * 5 = 15
3 * 6 = 18
3 * 7 = 21
3 * 8 = 24
3 * 9 = 27
3 * 10 = 30

PL/SQL procedure successfully completed.




create table num(even int,odd int);
SQL> begin
  2  for i in 1 .. 10 loop
  3  if(mod(i,2)=0) thens
  4  insert into num(even) values(i);
  5  else
  6  insert into num(odd) values(i);
  7  end if;
  8  end loop;
  9  end;
 10  /

PL/SQL procedure successfully completed.

SQL> select * from num;

      EVEN        ODD
---------- ----------
                    1
         2
                    3
         4
                    5
         6
                    7
         8
                    9
        10

10 rows selected.

create table sq_cube(sq int,cube int);
declare
sq pls_integer;
cube pls_integer;
begin
   for i in 1 .. 10 loop
   sq := power(i,2);
   cube := power(i,3);
   insert into sq_cube values(sq,cube);
   end loop;
   end;
  /
PL/SQL procedure successfully completed.

SQL> select *  from sq_cube;

        SQ       CUBE
---------- ----------
         1          1
         4          8
         9         27
        16         64
        25        125
        36        216
        49        343
        64        512
        81        729
       100       1000

10 rows selected.


begin
update emp set emi=emi/2 where cid == n;
dbms_output.put_line('emi updated');
end;
/






8:

SQL> create table emp(cid int not null,emi int);

Table created.

SQL> insert into  emp values(1,1000);

1 row created.

SQL> insert into  emp values(2,2000);

1 row created.

SQL> insert into  emp values(3,3000);

1 row created.

SQL> select * from emp;

       CID        EMI
---------- ----------
         1       1000
         2       2000
         3       3000

SQL> set serveroutput on;

SQL> begin
    update emp set emi=emi/2 where cid =& n;
    if(sql%notfound) then
    dbms_output.put_line('id not found');
    end if;
    end;
    /
Enter value for n: 1
old   2: update emp set emi=emi/2 where cid =& n;
new   2: update emp set emi=emi/2 where cid =1;

PL/SQL procedure successfully completed.

SQL> select * from emp;

       CID        EMI
---------- ----------
         1        500
         2       2000
         3       3000